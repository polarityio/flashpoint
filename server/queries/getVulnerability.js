const { map } = require('lodash/fp');

const {
  logging: { getLogger },
  errors: { parseErrorToReadableJson }
} = require('polarity-integration-utils');

const { requestsInParallel } = require('../request');

const getVulnerability = async (cveEntities, options) => {
  const Logger = getLogger();

  try {
    const vulnRequests = map(
      (entity) => ({
        resultId: entity.value,
        // Trailing slash on the route is required or the API request will fail
        route: `vulnerability-intelligence/v1/vulnerabilities/`,
        qs: {
          query: `"${entity.value}"`
        },
        options
      }),
      cveEntities
    );

    const vulnResults = await requestsInParallel(vulnRequests, 'body.results');

    return vulnResults;
  } catch (error) {
    const err = parseErrorToReadableJson(error);
    Logger.error(
      {
        formattedError: err,
        error
      },
      'Getting Vulnerability Failed'
    );
    throw error;
  }
};

module.exports = getVulnerability;
